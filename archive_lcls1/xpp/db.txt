
The objects referenced in this file are populated by the xpppython

initialization. If you wish to use devices from this file, import

them from xpp.db after calling the xpppython startup script.


hutch-python last loaded on 2024-12-10 22:07:06.880817
with the following objects:

__doc__              <class 'str'>
debug_console_level  <class 'function'>
debug_mode           <class 'function'>
debug_context        <class 'function'>
debug_wrapper        <class 'function'>
set_engineering_mode <class 'function'>
logs                 <class 'hutch_python.utils.HelpfulNamespace'>
RE                   <class 'bluesky.run_engine.RunEngine'>
bec                  <class 'nabs.callbacks.BECOptionsPerRun'>
calc                 <class 'hutch_python.utils.HelpfulNamespace'>
daq                  <class 'pcdsdaq.daq.original.Daq'>
bp                   <class 'hutch_python.utils.HelpfulNamespace'>
bps                  <class 'hutch_python.utils.HelpfulNamespace'>
bpp                  <class 'hutch_python.utils.HelpfulNamespace'>
re                   <class 'hutch_python.utils.HelpfulNamespace'>
register_plan        <class 'function'>
scan_pvs             <class 'pcdsdaq.scan_vars.ScanVars'>
beam_stats           <class 'pcdsdevices.beam_stats.BeamStats'>
lcls                 <class 'pcdsdevices.beam_stats.LCLS'>
hx2_reference_laser  <class 'pcdsdevices.inout.LightpathInOutRecordPositioner'>
pf1l0                <class 'pcdsdevices.wfs.WaveFrontSensorTarget'>
tv5l0_vgc01          <class 'pcdsdevices.valve.VGC'>
sp1l0                <class 'pcdsdevices.spectrometer.Kmono'>
im2l0                <class 'pcdsdevices.pim.XPIM'>
mr2l0_homs           <class 'pcdsdevices.mirror.XOffsetMirrorStateCool'>
mr2l0_homs_vgc01     <class 'pcdsdevices.valve.VGC'>
bt2l0_pleg_vgc01     <class 'pcdsdevices.valve.VGC'>
xpp_mon_valve_3      <class 'pcdsdevices.valve.GateValve'>
em2l0_gem_vgc70      <class 'pcdsdevices.valve.VGC'>
tv6l0_vgc01          <class 'pcdsdevices.valve.VGC'>
mr1l0_homs           <class 'pcdsdevices.mirror.XOffsetMirrorStateCool'>
tv2l0_vgc02          <class 'pcdsdevices.valve.VGC'>
at1l0                <class 'pcdsdevices.attenuator.FeeAtt'>
tv2l0_vgc01          <class 'pcdsdevices.valve.VGC'>
tv4l0_vgc01          <class 'pcdsdevices.valve.VGC'>
hxd_mon_valve_2      <class 'pcdsdevices.valve.GateValve'>
im4l0                <class 'pcdsdevices.pim.XPIM'>
tv1l0_vgc01          <class 'pcdsdevices.valve.VGC'>
im3l0                <class 'pcdsdevices.pim.IM3L0'>
mr1l0_homs_vgc01     <class 'pcdsdevices.valve.VGC'>
em1l0_gem_vgc10      <class 'pcdsdevices.valve.VGC'>
xpp_lodcm            <class 'pcdsdevices.lodcm.XPPLODCM'>
hxd_mon_valve_1      <class 'pcdsdevices.valve.GateValve'>
pc1l0_xtes_vgc01     <class 'pcdsdevices.valve.VGC'>
im1l0_xtes_vgc01     <class 'pcdsdevices.valve.VGC'>
hx2_slits            <class 'pcdsdevices.slits.Slits'>
at2l0                <class 'pcdsdevices.attenuator.AT2L0'>
hx2_pim              <class 'pcdsdevices.pim.PIM'>
sl1l0                <class 'pcdsdevices.slits.PowerSlits'>
im1l0                <class 'pcdsdevices.pim.XPIM'>
mr2l0_homs_vgc_02    <class 'pcdsdevices.valve.VGC'>
tv3l0_vfs01          <class 'pcdsdevices.valve.VFS'>
hx2_ipm              <class 'pcdsdevices.ipm.IPMMotion'>
rtdsl0               <class 'pcdsdevices.rtds_ebd.RTDSL0'>
st1l0_pps            <class 'pcdsdevices.stopper.PPSStopper'>
at2l0_calc           <class 'pcdsdevices.attenuator.AttenuatorCalculator_AT2L0'>
em1l0                <class 'pcdsdevices.energy_monitor.GEM'>
em2l0                <class 'pcdsdevices.energy_monitor.GEM'>
hxrsss               <class 'pcdsdevices.spectrometer.HXRSpectrometer'>
im3l0_k2700          <class 'pcdsdevices.keithley.IM3L0_K2700'>
hxd_dg2_ipm          <class 'pcdsdevices.ipm.IPMMotion'>
hxd_dg2_pim          <class 'pcdsdevices.pim.PIM'>
hxd_dg2_slits        <class 'pcdsdevices.slits.Slits'>
hxd_dg2_stopper      <class 'pcdsdevices.stopper.Stopper'>
hxd_dg2_valve        <class 'pcdsdevices.valve.GateValve'>
mec_yag0             <class 'pcdsdevices.pim.PIMWithFocus'>
mec_yag0_mfx         <class 'pcdsdevices.pim.PIMWithFocus'>
mec_yag0_xcs         <class 'pcdsdevices.pim.PIMWithFocus'>
mec_yag1             <class 'pcdsdevices.pim.PIMWithFocus'>
mr1l3_homs           <class 'pcdsdevices.mirror.XOffsetMirrorXYState'>
mr1l4_homs           <class 'pcdsdevices.mirror.XOffsetMirrorXYState'>
mr2l3_homs           <class 'pcdsdevices.mirror.XOffsetMirrorState'>
mxt_valve_1          <class 'pcdsdevices.valve.GateValve'>
mxt_valve_2          <class 'pcdsdevices.valve.GateValve'>
sh2                  <class 'pcdsdevices.stopper.PPSStopper'>
um6_ipm              <class 'pcdsdevices.ipm.IPMMotion'>
um6_pim              <class 'pcdsdevices.pim.PIMWithLED'>
um6_slits            <class 'pcdsdevices.slits.Slits'>
um6_stopper          <class 'pcdsdevices.stopper.Stopper'>
xcs_lodcm            <class 'pcdsdevices.lodcm.XCSLODCM'>
xrt_dg3m_pim         <class 'pcdsdevices.pim.PIM'>
xrt_dg3m_slits       <class 'pcdsdevices.slits.Slits'>
xrt_dvd_valve        <class 'pcdsdevices.valve.GateValve'>
xrt_mxt_valve        <class 'pcdsdevices.valve.GateValve'>
xpp_beampath         <class 'lightpath.path.BeamPath'>
light_ctrl           <class 'lightpath.controller.LightController'>
archive              <class 'archapp.interactive.EpicsArchive'>
camviewer            <class 'hutch_python.utils.HelpfulNamespace'>
sim                  <class 'hutch_python.utils.HelpfulNamespace'>
thz_wp               <class 'pcdsdevices.epics_motor.Newport'>
diff_th              <class 'pcdsdevices.epics_motor.IMS'>
diff_chi             <class 'pcdsdevices.epics_motor.IMS'>
safe_load            <class 'function'>
Newport              <class 'type'>
PMC100               <class 'type'>
IMS                  <class 'type'>
BeckhoffAxis         <class 'type'>
FakeDelay            <class 'type'>
LaserShutter         <class 'type'>
LaserFlipper         <class 'type'>
fake_motor           <class 'ophyd.sim.SynAxis'>
SmarAct              <class 'type'>
EpicsMotorInterface  <class 'type'>
EventSequencer       <class 'type'>
seq                  <class 'pcdsdevices.sequencer.EventSequencer'>
seq2                 <class 'pcdsdevices.sequencer.EventSequencer'>
kmono_th             <class 'pcdsdevices.epics_motor.BeckhoffAxis'>
kmono_y              <class 'pcdsdevices.epics_motor.BeckhoffAxis'>
fake_delay           <class 'xpp.delay_stage.FakeDelay'>
LensStack            <class 'type'>
XYZStage             <class 'type'>
xpp_gon_xyz          <class 'pcdsdevices.gon.XYZStage'>
SamPhi               <class 'type'>
xpp_gon_sam          <class 'pcdsdevices.gon.SamPhi'>
Kappa                <class 'type'>
xpp_gon_kappa        <class 'pcdsdevices.gon.Kappa'>
kappa                <class 'pcdsdevices.gon.Kappa'>
Device               <class 'type'>
Cpt                  <class 'type'>
BeckhoffAxisOld      <class 'type'>
BeckhoffAxisPLCOld   <class 'type'>
BaseInterface        <class 'type'>
BeckhoffAxisPLC      <class 'type'>
run_ascan_daq_noplot <class 'function'>
bl                   <class 'type'>
logging              <class 'module'>
OCpt                 <class 'type'>
LaserTiming          <class 'type'>
SyncAxis             <class 'type'>
delay_scan           <class 'function'>
daq_delay_scan       <class 'function'>
EpicsSignal          <class 'type'>
cp                   <class 'pcdsdevices.lasers.shutters.LaserShutter'>
lp                   <class 'pcdsdevices.lasers.shutters.LaserShutter'>
ep                   <class 'pcdsdevices.lasers.shutters.LaserShutter'>
vp                   <class 'pcdsdevices.lasers.shutters.LaserFlipper'>
opa                  <class 'pcdsdevices.lasers.shutters.LaserFlipper'>
lp_close             <class 'function'>
lp_open              <class 'function'>
cp_close             <class 'function'>
cp_open              <class 'function'>
ep_open              <class 'function'>
ep_close             <class 'function'>
vp_open              <class 'function'>
vp_close             <class 'function'>
opa_open             <class 'function'>
opa_close            <class 'function'>
fat1                 <class 'pcdsdevices.attenuator.FeeAtt'>
fat2                 <class 'pcdsdevices.attenuator.AT2L0'>
yag1                 <class 'pcdsdevices.pim.PIM'>
crl                  <class 'type'>
lowT                 <class 'type'>
LIB_SmarAct          <class 'type'>
lu                   <class 'type'>
lmirror_y            <class 'pcdsdevices.epics_motor.SmarAct'>
lmirror_x            <class 'pcdsdevices.epics_motor.SmarAct'>
pr_v                 <class 'pcdsdevices.epics_motor.SmarAct'>
pr_h                 <class 'pcdsdevices.epics_motor.SmarAct'>
mono1_th             <class 'pcdsdevices.epics_motor.SmarAct'>
pr_th                <class 'pcdsdevices.epics_motor.SmarAct'>
sam_phi              <class 'pcdsdevices.epics_motor.SmarAct'>
sam_y                <class 'pcdsdevices.epics_motor.SmarAct'>
sam_x                <class 'pcdsdevices.epics_motor.SmarAct'>
sam_z                <class 'pcdsdevices.epics_motor.SmarAct'>
shutil               <class 'module'>
os                   <class 'module'>
time                 <class 'module'>
hu                   <class 'module'>
amisv                <class 'type'>
np                   <class 'module'>
json                 <class 'module'>
UsDigitalUsbEncoder  <class 'type'>
LiveTable            <class 'type'>
tt_x                 <class 'pcdsdevices.epics_motor.IMS'>
tt_y                 <class 'pcdsdevices.epics_motor.IMS'>
HxrDiffractometer    <class 'type'>
diff                 <class 'pcdsdevices.gon.HxrDiffractometer'>
staubli_robot        <class 'module'>
robot                <class 'pcdsdevices.staubli_robot.StaubliRobot'>
Rob                  <class 'type'>
rob                  <class 'xpp.beamline.Rob'>
rob_pixel_az_el      <class 'function'>
x                    <class 'hutch_python.utils.HelpfulNamespace'>
user                 <class 'hutch_python.utils.HelpfulNamespace'>
motors               <class 'hutch_python.utils.HelpfulNamespace'>
m                    <class 'hutch_python.utils.HelpfulNamespace'>
slits                <class 'hutch_python.utils.HelpfulNamespace'>
s                    <class 'hutch_python.utils.HelpfulNamespace'>
a                    <class 'hutch_python.utils.HelpfulNamespace'>
all_objects          <class 'hutch_python.utils.HelpfulNamespace'>
